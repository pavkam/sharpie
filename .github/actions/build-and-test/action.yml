name: Build and Test .NET Application
description: Common action to build and test the SeatFair .NET API

inputs:
  dotnet-version:
    description: ".NET version to use"
    required: false
    default: "9.0.x"

  configuration:
    description: "Build configuration"
    required: false
    default: "Release"

  coverage-report-path:
    description: "Path to the coverage report"
    required: false
    default: "coverage_report"

runs:
  using: composite
  steps:
    - name: ⚙️ Set up .NET
      id: setup_dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: ♻️ Cache NuGet packages and dotnet tools
      id: cache_nuget_packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.nuget/packages
          ~/.nuget/toolcache
        key: ${{ runner.os }}-dotnet-${{ hashFiles('**/packages.lock.json', '**/packages.config', '**/*.csproj', '**/.config/dotnet-tools.json') }}
        restore-keys: |
          ${{ runner.os }}-dotnet-

    - name: 🔍 Check formatting & code style
      id: check_formatting_and_code_style
      shell: bash
      run: make lint

    - name: 🛠️ Build
      id: build
      shell: bash
      run: make build CONFIGURATION=${{ inputs.configuration }}

    - name: 🧪 Test with coverage
      id: test_with_coverage
      shell: bash
      run: |
        make test-and-report CONFIGURATION=${{ inputs.configuration }} COVERAGE_REPORT_PATH=${{ inputs.coverage-report-path }}

    - name: 📝 Generate code coverage report
      id: generate_code_coverage_report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.3
      with:
        reports: "**/TestResults/**/*.cobertura.xml"
        targetdir: ${{ inputs.coverage-report-path }}
        reporttypes: "HtmlInline;Cobertura;Badges"

    - name: ⬆️ Upload coverage report artifact
      id: upload_coverage_report_artifact
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport-${{ matrix.os }}
        path: ${{ inputs.coverage-report-path }}

    - name: 📝 Publish test results (Linux)
      id: publish_test_results_linux
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: ${{ always() && inputs.os == 'Linux' }}
      with:
        files: "**/TestResults/**/test-results.trx"

    - name: 📝 Publish test results (macOS)
      id: publish_test_results_macos
      if: always() && inputs.os == 'macOS'
      shell: bash
      run: |
        make report
        cat ${{ inputs.coverage-report-path }}/Summary.md >> $GITHUB_STEP_SUMMARY

    - name: 📝 Publish test results (Windows)
      id: publish_test_results_windows
      if: always() && runner.os == 'Windows'
      shell: pwsh
      run: |
        make report
        Get-Content ${{ inputs.coverage-report-path }}\Summary.md | Out-File -Append -FilePath $env:GITHUB_STEP_SUMMARY
